// <auto-generated />
using System;
using ManyToManyRelation.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManyToManyRelation.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20250325101219_addTables")]
    partial class addTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ManyToManyRelation.Model.Author", b =>
                {
                    b.Property<int>("AId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AId"));

                    b.Property<int?>("AuthorAId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AId");

                    b.HasIndex("AuthorAId");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("ManyToManyRelation.Model.Book", b =>
                {
                    b.Property<int>("BId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BId"));

                    b.Property<int?>("BookBId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BId");

                    b.HasIndex("BookBId");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("ManyToManyRelation.Model.Author", b =>
                {
                    b.HasOne("ManyToManyRelation.Model.Author", null)
                        .WithMany("Authors")
                        .HasForeignKey("AuthorAId");
                });

            modelBuilder.Entity("ManyToManyRelation.Model.Book", b =>
                {
                    b.HasOne("ManyToManyRelation.Model.Book", null)
                        .WithMany("Books")
                        .HasForeignKey("BookBId");
                });

            modelBuilder.Entity("ManyToManyRelation.Model.Author", b =>
                {
                    b.Navigation("Authors");
                });

            modelBuilder.Entity("ManyToManyRelation.Model.Book", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
